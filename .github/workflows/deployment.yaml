name: My CI/CD Pipeline

on:
  push:
    branches:
      - main
      - GA
  pull_request:
    branches:
      - main
      - GA

env:
  WORKSPACE: ${{ github.workspace }}
  NEXUS_CREDENTIAL_ID: Nexus-Credential

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Set up Maven
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
        cache: 'maven'

    - name: Build
      run: mvn clean package

    - name: Archive Artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: war-files
        path: '**/*.war'

    - name: Unit Test
      run: mvn test

    - name: Integration Test
      run: mvn verify -DskipUnitTests

    - name: Checkstyle Code Analysis
      run: mvn checkstyle:checkstyle

    - name: SonarQube Inspection
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      run: |
        mvn sonar:sonar \
        -Dsonar.projectKey=JavaWebApp-Project \
        -Dsonar.host.url=http://172.31.90.165:9000 \
        -Dsonar.login=$SONAR_TOKEN

    - name: SonarQube GateKeeper
      run: |
        timeout 1h waitForQualityGate

    - name: Nexus Artifact Uploader
      env:
        NEXUS_USER: ${{ secrets.NEXUS_USER }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      run: |
        mvn deploy:deploy-file \
        -Durl=http://172.31.87.194:8081/repository/maven-project-releases/ \
        -DrepositoryId=${{ secrets.NEXUS_CREDENTIAL_ID }} \
        -DgroupId=webapp \
        -DartifactId=webapp \
        -Dversion=${{ github.run_id }}-${{ github.run_number }} \
        -Dpackaging=war \
        -Dfile=${{ github.workspace }}/webapp/target/webapp.war

    - name: Deploy to Development Env
      env:
        USER_NAME: ${{ secrets.ANSIBLE_USER }}
        PASSWORD: ${{ secrets.ANSIBLE_PASSWORD }}
      run: |
        ansible-playbook -i ${WORKSPACE}/ansible-config/aws_ec2.yaml ${WORKSPACE}/deploy.yaml --extra-vars "ansible_user=$USER_NAME ansible_password=$PASSWORD hosts=tag_Environment_dev workspace_path=$WORKSPACE"

    - name: Deploy to Staging Env
      env:
        USER_NAME: ${{ secrets.ANSIBLE_USER }}
        PASSWORD: ${{ secrets.ANSIBLE_PASSWORD }}
      run: |
        ansible-playbook -i ${WORKSPACE}/ansible-config/aws_ec2.yaml ${WORKSPACE}/deploy.yaml --extra-vars "ansible_user=$USER_NAME ansible_password=$PASSWORD hosts=tag_Environment_stage workspace_path=$WORKSPACE"

    - name: Quality Assurance Approval
      run: echo "Do you want to proceed?"

    - name: Deploy to Production Env
      env:
        USER_NAME: ${{ secrets.ANSIBLE_USER }}
        PASSWORD: ${{ secrets.ANSIBLE_PASSWORD }}
      run: |
        ansible-playbook -i ${WORKSPACE}/ansible-config/aws_ec2.yaml ${WORKSPACE}/deploy.yaml --extra-vars "ansible_user=$USER_NAME ansible_password=$PASSWORD hosts=tag_Environment_prod workspace_path=$WORKSPACE"

    - name: Slack Notifications
      if: always()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"channel": "#ma-cicd-pipeline-alerts", "text": "*${{ job.status }}:* Job Name '${{ github.workflow }}' build ${{ github.run_number }} \n Build Timestamp: ${{ github.run_id }} \n Project Workspace: ${{ github.workspace }} \n More info at: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' $SLACK_WEBHOOK_URL
